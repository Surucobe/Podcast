{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\n\nvar _default =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(_default, _React$Component);\n\n  function _default() {\n    _classCallCheck(this, _default);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(_default).apply(this, arguments));\n  }\n\n  _createClass(_default, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          channel = _this$props.channel,\n          audioClips = _this$props.audioClips,\n          series = _this$props.series,\n          idChannel = _this$props.idChannel;\n      return __jsx(\"div\", {\n        className: \"jsx-2922817682\"\n      }, __jsx(Link, {\n        href: \"/\"\n      }, __jsx(\"a\", {\n        className: \"jsx-2922817682\"\n      }, __jsx(\"header\", {\n        className: \"jsx-2922817682\"\n      }, \"Podcast\"))), __jsx(\"h1\", {\n        className: \"jsx-2922817682\"\n      }, channel.title), __jsx(\"h2\", {\n        className: \"jsx-2922817682\"\n      }, \"Series\"), __jsx(\"ul\", {\n        className: \"jsx-2922817682\"\n      }, series.map(function (serie) {\n        return __jsx(\"li\", {\n          key: serie.id,\n          className: \"jsx-2922817682\"\n        }, serie.title);\n      })), __jsx(\"h2\", {\n        className: \"jsx-2922817682\"\n      }, \"Ultimos Clips\"), __jsx(\"ul\", {\n        className: \"jsx-2922817682\" + \" \" + \"channels\"\n      }, audioClips.map(function (clip) {\n        return __jsx(Link, {\n          href: \"/podcast?id=\".concat(clip.id),\n          key: clip.id\n        }, __jsx(\"a\", {\n          className: \"jsx-2922817682\" + \" \" + \"channel\"\n        }, __jsx(\"li\", {\n          className: \"jsx-2922817682\"\n        }, __jsx(\"img\", {\n          src: clip.urls.image || clip.channel.urls.logo_image.original,\n          alt: clip.title,\n          className: \"jsx-2922817682\"\n        }), __jsx(\"h4\", {\n          className: \"jsx-2922817682\"\n        }, \" \", clip.title, \" \"))));\n      })), __jsx(_JSXStyle, {\n        id: \"3944182881\"\n      }, [\"header.jsx-2922817682{color:#fff;background:#8756ca;padding:15px;font-size:1.5em;font-weight:bold;text-align:center;}\", \".channels.jsx-2922817682{display:grid;grid-gap:15px;padding:15px;grid-template-columns:repeat(auto-fill,minmax(160px,1fr));}\", \".channel.jsx-2922817682{display:block;border-radius:3px;box-shadow:0px 2px 6px rgba(0,0,0,0.15);margin-bottom:0.5em;background-color:whitesmoke;text-align:center;}\", \".channel.jsx-2922817682 img.jsx-2922817682{width:100%;}\", \"h1.jsx-2922817682{text-align:center;font-weight:600;padding:15px;}\", \"h2.jsx-2922817682{padding:5px;font-size:0.9em;font-weigth:600;margin:0;color:whitesmoke;text-align:center;}\", \"h4.jsx-2922817682{color:black;}\"]), __jsx(_JSXStyle, {\n        id: \"2210306586\"\n      }, [\"body{margin:0;font-family:system-ui;background-color:#234050;}\", \"a{color:whitesmoke;-webkit-text-decoration:none;text-decoration:none;}\", \"li{list-style:none;color:whitesmoke;}\"]));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var query, idChannel, _ref2, _ref3, reqChannel, reqAudios, reqSeries, dataChannel, channel, dataAudios, audioClips, dataSeries, series;\n\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              query = _ref.query;\n              idChannel = query.id;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(_Promise.all([fetch(\"https://api.audioboom.com/channels/\".concat(idChannel)), fetch(\"https://api.audioboom.com/channels/\".concat(idChannel, \"/audio_clips\")), fetch(\"https://api.audioboom.com/channels/\".concat(idChannel, \"/child_channels\"))]));\n\n            case 4:\n              _ref2 = _context.sent;\n              _ref3 = _slicedToArray(_ref2, 3);\n              reqChannel = _ref3[0];\n              reqAudios = _ref3[1];\n              reqSeries = _ref3[2];\n              _context.next = 11;\n              return _regeneratorRuntime.awrap(reqChannel.json());\n\n            case 11:\n              dataChannel = _context.sent;\n              channel = dataChannel.body.channel;\n              _context.next = 15;\n              return _regeneratorRuntime.awrap(reqAudios.json());\n\n            case 15:\n              dataAudios = _context.sent;\n              audioClips = dataAudios.body.audio_clips;\n              _context.next = 19;\n              return _regeneratorRuntime.awrap(reqSeries.json());\n\n            case 19:\n              dataSeries = _context.sent;\n              series = dataSeries.body.channels;\n              return _context.abrupt(\"return\", {\n                channel: channel,\n                audioClips: audioClips,\n                series: series,\n                idChannel: idChannel\n              });\n\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n  }]);\n\n  return _default;\n}(React.Component);\n\nexport { _default as default };","map":null,"metadata":{},"sourceType":"module"}