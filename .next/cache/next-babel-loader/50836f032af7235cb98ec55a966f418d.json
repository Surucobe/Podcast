{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marlon\\\\Desktop\\\\Platzi\\\\JS\\\\nextJS\\\\podcast\\\\component\\\\ChannelGrid.jsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nexport default class ChannelGrid extends React.Component {\n  render() {\n    const {\n      channels\n    } = this.props;\n    return __jsx(\"div\", {\n      className: \"jsx-3595992711\" + \" \" + \"channels\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, channels.map(channel => __jsx(Link, {\n      key: channel.id,\n      href: `/channel?id=${channel.id}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      className: \"jsx-3595992711\" + \" \" + \"channel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: channel.urls.logo_image.original,\n      alt: \"\",\n      className: \"jsx-3595992711\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }), __jsx(\"h2\", {\n      className: \"jsx-3595992711\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, channel.title)))), __jsx(_JSXStyle, {\n      id: \"3595992711\",\n      __self: this\n    }, \".channels.jsx-3595992711{display:grid;grid-gap:15px;padding:15px;grid-template-columns:repeat(auto-fill,minmax(160px,1fr));}.channel.jsx-3595992711{display:block;border-radius:3px;box-shadow:0px 2px 6px rgba(0,0,0,0.15);margin-bottom:0.5em;background-color:whitesmoke;}.channel.jsx-3595992711 img.jsx-3595992711{width:100%;}h2.jsx-3595992711{padding:5px;font-size:0.9em;font-weigth:600;margin:0;text-align:center;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTWFybG9uXFxEZXNrdG9wXFxQbGF0emlcXEpTXFxuZXh0SlNcXHBvZGNhc3RcXGNvbXBvbmVudFxcQ2hhbm5lbEdyaWQuanN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWlCc0IsQUFHMEIsQUFNQyxBQU9ILEFBR0MsV0FGZCxDQUdrQixDQWhCRixDQU1JLGFBTEwsQ0FnQkcsSUFWdUIsUUFMcUIsSUFnQm5ELFNBQ1Msa0JBQ3BCLENBWnNCLG9CQUNRLE1BTjlCLHNCQU9BIiwiZmlsZSI6IkM6XFxVc2Vyc1xcTWFybG9uXFxEZXNrdG9wXFxQbGF0emlcXEpTXFxuZXh0SlNcXHBvZGNhc3RcXGNvbXBvbmVudFxcQ2hhbm5lbEdyaWQuanN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IExpbmsgZnJvbSAnbmV4dC9saW5rJ1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2hhbm5lbEdyaWQgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnR7XHJcbiAgcmVuZGVyKCkge1xyXG4gICAgY29uc3QgeyBjaGFubmVscyB9ID0gdGhpcy5wcm9wc1xyXG5cclxuICAgIHJldHVybihcclxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJjaGFubmVsc1wiPlxyXG4gICAgICAgICAgeyBjaGFubmVscy5tYXAoKGNoYW5uZWwpID0+IChcclxuICAgICAgICAgICAgPExpbmsga2V5PXsgY2hhbm5lbC5pZCB9IGhyZWY9e2AvY2hhbm5lbD9pZD0ke2NoYW5uZWwuaWR9YH0+XHJcbiAgICAgICAgICAgICAgPGEgY2xhc3NOYW1lPVwiY2hhbm5lbFwiPlxyXG4gICAgICAgICAgICAgICAgPGltZyBzcmM9eyBjaGFubmVsLnVybHMubG9nb19pbWFnZS5vcmlnaW5hbCB9IGFsdD1cIlwiLz5cclxuICAgICAgICAgICAgICAgIDxoMj57IGNoYW5uZWwudGl0bGUgfTwvaDI+XHJcbiAgICAgICAgICAgICAgPC9hPlxyXG4gICAgICAgICAgICA8L0xpbms+XHJcbiAgICAgICAgICApKSB9XHJcblxyXG4gICAgICAgICAgPHN0eWxlIGpzeD57YFxyXG4gICAgICAgICAgLmNoYW5uZWxzIHtcclxuICAgICAgICAgICAgZGlzcGxheTogZ3JpZDtcclxuICAgICAgICAgICAgZ3JpZC1nYXA6IDE1cHg7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDE1cHg7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KGF1dG8tZmlsbCwgbWlubWF4KDE2MHB4LCAxZnIpKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIC5jaGFubmVsIHtcclxuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDNweDtcclxuICAgICAgICAgICAgYm94LXNoYWRvdyAwcHggMnB4IDZweCByZ2JhKDAsMCwwLDAuMTUpO1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwLjVlbTtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGVzbW9rZTtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIC5jaGFubmVsIGltZyB7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgaDIge1xyXG4gICAgICAgICAgICBwYWRkaW5nOiA1cHg7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMC45ZW07XHJcbiAgICAgICAgICAgIGZvbnQtd2VpZ3RoOiA2MDA7XHJcbiAgICAgICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIGB9PC9zdHlsZT5cclxuICAgICAgICA8L2Rpdj5cclxuICAgIClcclxuICB9XHJcbn0iXX0= */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\Marlon\\\\\\\\Desktop\\\\\\\\Platzi\\\\\\\\JS\\\\\\\\nextJS\\\\\\\\podcast\\\\\\\\component\\\\\\\\ChannelGrid.jsx */\"));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Marlon/Desktop/Platzi/JS/nextJS/podcast/component/ChannelGrid.jsx"],"names":["Link","ChannelGrid","React","Component","render","channels","props","map","channel","id","urls","logo_image","original","title"],"mappings":";;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AAEA,eAAe,MAAMC,WAAN,SAA0BC,KAAK,CAACC,SAAhC,CAAyC;AACtDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKC,KAA1B;AAEA,WACE;AAAA,0CAAe,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACMD,QAAQ,CAACE,GAAT,CAAcC,OAAD,IACb,MAAC,IAAD;AAAM,MAAA,GAAG,EAAGA,OAAO,CAACC,EAApB;AAAyB,MAAA,IAAI,EAAG,eAAcD,OAAO,CAACC,EAAG,EAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA,0CAAa,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAGD,OAAO,CAACE,IAAR,CAAaC,UAAb,CAAwBC,QAAnC;AAA8C,MAAA,GAAG,EAAC,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMJ,OAAO,CAACK,KAAd,CAFF,CADF,CADA,CADN;AAAA;AAAA;AAAA,81FADF;AAsCD;;AA1CqD","sourcesContent":["import Link from 'next/link'\r\n\r\nexport default class ChannelGrid extends React.Component{\r\n  render() {\r\n    const { channels } = this.props\r\n\r\n    return(\r\n      <div className=\"channels\">\r\n          { channels.map((channel) => (\r\n            <Link key={ channel.id } href={`/channel?id=${channel.id}`}>\r\n              <a className=\"channel\">\r\n                <img src={ channel.urls.logo_image.original } alt=\"\"/>\r\n                <h2>{ channel.title }</h2>\r\n              </a>\r\n            </Link>\r\n          )) }\r\n\r\n          <style jsx>{`\r\n          .channels {\r\n            display: grid;\r\n            grid-gap: 15px;\r\n            padding: 15px;\r\n            grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\r\n          }\r\n          .channel {\r\n            display: block;\r\n            border-radius: 3px;\r\n            box-shadow 0px 2px 6px rgba(0,0,0,0.15);\r\n            margin-bottom: 0.5em;\r\n            background-color: whitesmoke;\r\n          }\r\n          .channel img {\r\n            width: 100%;\r\n          }\r\n          h2 {\r\n            padding: 5px;\r\n            font-size: 0.9em;\r\n            font-weigth: 600;\r\n            margin: 0;\r\n            text-align: center;\r\n          }\r\n        `}</style>\r\n        </div>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}