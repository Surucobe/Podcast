{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Error from 'next/error';\nimport Layout from '../component/Layout';\nimport Series from '../component/Series';\nimport Clips from '../component/Clips';\nimport PodacastPlayer from '../component/PodcastPlayer';\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"openPodcast\", (event, podcast) => {\n      event.preventDefault();\n      this.setState({\n        openPodcast: podcast\n      });\n    });\n\n    _defineProperty(this, \"closePodcast\", event => {\n      event.preventDefault();\n      this.setState({\n        openPodcast: null\n      });\n    });\n\n    this.state = {\n      openPodcast: null\n    };\n  }\n\n  static async getInitialProps({\n    query,\n    res\n  }) {\n    let idChannel = query.id;\n\n    try {\n      let [reqChannel, reqAudios, reqSeries] = await _Promise.all([fetch(`https://api.audioboom.com/channels/${idChannel}`), fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`), fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`)]);\n\n      if (reqChannel.status >= 400) {\n        res.statusCode = reqChannel.status;\n        return {\n          channel: null,\n          audioClips: null,\n          series: null,\n          statusCode: reqChannel.status\n        };\n      }\n\n      let dataChannel = await reqChannel.json();\n      let channel = dataChannel.body.channel;\n      let dataAudios = await reqAudios.json();\n      let audioClips = dataAudios.body.audio_clips;\n      let dataSeries = await reqSeries.json();\n      let series = dataSeries.body.channels;\n      return {\n        channel,\n        audioClips,\n        series,\n        statusCode: 200\n      };\n    } catch (e) {\n      return {\n        channel: null,\n        audioClips: null,\n        series: null,\n        statusCode: 503\n      };\n    }\n  }\n\n  render() {\n    const {\n      channel,\n      audioClips,\n      series,\n      statusCode\n    } = this.props;\n    const {\n      openPodcast\n    } = this.state;\n\n    if (statusCode !== 200) {\n      return __jsx(Error, {\n        statusCode: statusCode\n      });\n    }\n\n    return __jsx(React.Fragment, null, __jsx(Layout, {\n      title: channel.title\n    }, __jsx(\"div\", {\n      style: {\n        backgroundImage: `url(${channel.urls.logo_image.original}`\n      },\n      className: \"jsx-110524740\" + \" \" + \"hero\"\n    }), openPodcast && __jsx(\"div\", {\n      className: \"jsx-110524740\" + \" \" + \"modal\"\n    }), __jsx(\"h1\", {\n      className: \"jsx-110524740\"\n    }, \" \", channel.title, \" \"), audioClips.length > 0 && __jsx(Series, {\n      arr: audioClips,\n      onClickPodcast: this.openPodcast\n    }), series.length > 0 && __jsx(Clips, {\n      arr: series,\n      onClickPodcast: this.openPodcast\n    }), __jsx(_JSXStyle, {\n      id: \"2121170688\"\n    }, \"header.jsx-110524740{color:#fff;background:#8756ca;padding:15px;font-size:1.5em;font-weight:bold;text-align:center;}.channels.jsx-110524740{display:grid;grid-gap:15px;padding:15px;grid-template-columns:repeat(auto-fill,minmax(160px,1fr));}.channel.jsx-110524740{display:block;border-radius:3px;box-shadow:0px 2px 6px rgba(0,0,0,0.15);margin-bottom:0.5em;text-align:center;}.channel.jsx-110524740 img.jsx-110524740{width:100%;}h1.jsx-110524740{text-align:center;font-weight:600;padding:15px;color:whitesmoke;}h2.jsx-110524740{padding:5px;font-size:0.9em;font-weigth:600;margin:0;color:whitesmoke;text-align:center;}h4.jsx-110524740{color:black;}.hero.jsx-110524740{height:250px;width:100%;background-position:center;}.modal.jsx-110524740{position:fixed;top:0;right:0;bottom:0;left:0;z-index:9999;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTWFybG9uXFxEZXNrdG9wXFxQbGF0emlcXEpTXFxuZXh0SlNcXHBvZGNhc3RcXHBhZ2VzXFxjaGFubmVsLmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFnR3dCLEFBRzRCLEFBUUUsQUFNQyxBQU9ILEFBR08sQUFNTixBQVFBLEFBR0MsQUFNRSxXQTlDSSxBQXFCckIsQ0FTa0IsQUFRbEIsQ0E5QmdCLEFBaUNILENBM0JPLENBaUNaLEdBdkJVLEdBd0JSLEdBTm1CLEdBakNkLENBc0JHLENBa0JQLENBaERJLEVBYzBCLEVBVTFCLElBeUJOLEVBeENxRCxHQVI1QyxDQThCUCxDQW1CSSxFQXpCSSxJQWlCbkIsRUFWbUIsS0FtQm5CLENBakRtQixLQXdCbkIsTUFPb0IsRUFsQkUsSUFaRixZQStCcEIsSUFsQm9CLEVBWnBCLElBTUEsWUFPQSIsImZpbGUiOiJDOlxcVXNlcnNcXE1hcmxvblxcRGVza3RvcFxcUGxhdHppXFxKU1xcbmV4dEpTXFxwb2RjYXN0XFxwYWdlc1xcY2hhbm5lbC5qc3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRXJyb3IgZnJvbSAnbmV4dC9lcnJvcidcclxuXHJcbmltcG9ydCBMYXlvdXQgZnJvbSAnLi4vY29tcG9uZW50L0xheW91dCdcclxuaW1wb3J0IFNlcmllcyBmcm9tICcuLi9jb21wb25lbnQvU2VyaWVzJ1xyXG5pbXBvcnQgQ2xpcHMgZnJvbSAnLi4vY29tcG9uZW50L0NsaXBzJ1xyXG5pbXBvcnQgUG9kYWNhc3RQbGF5ZXIgZnJvbSAnLi4vY29tcG9uZW50L1BvZGNhc3RQbGF5ZXInXHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XHJcbiAgY29uc3RydWN0b3IocHJvcHMpe1xyXG4gICAgc3VwZXIocHJvcHMpXHJcblxyXG4gICAgdGhpcy5zdGF0ZSA9IHsgb3BlblBvZGNhc3Q6IG51bGwgfVxyXG4gIH1cclxuXHJcbiAgc3RhdGljIGFzeW5jIGdldEluaXRpYWxQcm9wcyh7IHF1ZXJ5LCByZXMgfSl7XHJcbiAgICBsZXQgaWRDaGFubmVsID0gcXVlcnkuaWRcclxuXHJcbiAgICB0cnl7XHJcbiAgICAgIGxldCBbcmVxQ2hhbm5lbCwgcmVxQXVkaW9zLCByZXFTZXJpZXNdID0gYXdhaXQgUHJvbWlzZS5hbGwoW1xyXG4gICAgICAgIGZldGNoKGBodHRwczovL2FwaS5hdWRpb2Jvb20uY29tL2NoYW5uZWxzLyR7aWRDaGFubmVsfWApLFxyXG4gICAgICAgIGZldGNoKGBodHRwczovL2FwaS5hdWRpb2Jvb20uY29tL2NoYW5uZWxzLyR7aWRDaGFubmVsfS9hdWRpb19jbGlwc2ApLFxyXG4gICAgICAgIGZldGNoKGBodHRwczovL2FwaS5hdWRpb2Jvb20uY29tL2NoYW5uZWxzLyR7aWRDaGFubmVsfS9jaGlsZF9jaGFubmVsc2ApXHJcbiAgICAgIF0pXHJcblxyXG4gICAgICBpZiggcmVxQ2hhbm5lbC5zdGF0dXMgPj0gNDAwICkge1xyXG4gICAgICAgIHJlcy5zdGF0dXNDb2RlID0gcmVxQ2hhbm5lbC5zdGF0dXNcclxuICAgICAgICByZXR1cm4geyBjaGFubmVsOiBudWxsLCBhdWRpb0NsaXBzOiBudWxsLCBzZXJpZXM6IG51bGwsIHN0YXR1c0NvZGU6IHJlcUNoYW5uZWwuc3RhdHVzIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgbGV0IGRhdGFDaGFubmVsID0gYXdhaXQgcmVxQ2hhbm5lbC5qc29uKClcclxuICAgICAgbGV0IGNoYW5uZWwgPSBkYXRhQ2hhbm5lbC5ib2R5LmNoYW5uZWxcclxuXHJcbiAgICAgIGxldCBkYXRhQXVkaW9zID0gYXdhaXQgcmVxQXVkaW9zLmpzb24oKVxyXG4gICAgICBsZXQgYXVkaW9DbGlwcyA9IGRhdGFBdWRpb3MuYm9keS5hdWRpb19jbGlwc1xyXG5cclxuICAgICAgbGV0IGRhdGFTZXJpZXMgPSBhd2FpdCByZXFTZXJpZXMuanNvbigpXHJcbiAgICAgIGxldCBzZXJpZXMgPSBkYXRhU2VyaWVzLmJvZHkuY2hhbm5lbHNcclxuXHJcbiAgICAgIHJldHVybiB7IGNoYW5uZWwsIGF1ZGlvQ2xpcHMsIHNlcmllcywgc3RhdHVzQ29kZTogMjAwIH1cclxuICAgIH0gY2F0Y2goZSkge1xyXG4gICAgICByZXR1cm4geyBjaGFubmVsOiBudWxsLCBhdWRpb0NsaXBzOiBudWxsLCBzZXJpZXM6IG51bGwsIHN0YXR1c0NvZGU6IDUwMyB9XHJcbiAgICB9XHJcblxyXG4gIH1cclxuXHJcbiAgb3BlblBvZGNhc3QgPSAoZXZlbnQsIHBvZGNhc3QpID0+IHtcclxuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KClcclxuICAgIHRoaXMuc2V0U3RhdGUoe1xyXG4gICAgICBvcGVuUG9kY2FzdDogcG9kY2FzdFxyXG4gICAgfSlcclxuICB9XHJcblxyXG4gIGNsb3NlUG9kY2FzdCA9IChldmVudCkgPT4ge1xyXG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKVxyXG4gICAgdGhpcy5zZXRTdGF0ZSh7XHJcbiAgICAgIG9wZW5Qb2RjYXN0OiBudWxsXHJcbiAgICB9KVxyXG4gIH1cclxuXHJcbiAgcmVuZGVyKCkge1xyXG4gIFxyXG4gICAgY29uc3QgeyBjaGFubmVsLCBhdWRpb0NsaXBzLCBzZXJpZXMsIHN0YXR1c0NvZGUgfSA9IHRoaXMucHJvcHNcclxuICAgIGNvbnN0IHsgb3BlblBvZGNhc3QgfSA9IHRoaXMuc3RhdGVcclxuXHJcbiAgICBpZiggc3RhdHVzQ29kZSAhPT0gMjAwICl7XHJcbiAgICAgIHJldHVybiA8RXJyb3Igc3RhdHVzQ29kZT17IHN0YXR1c0NvZGUgfSAvPlxyXG4gICAgfVxyXG5cclxuICAgIHJldHVybihcclxuICAgICAgPFJlYWN0LkZyYWdtZW50PlxyXG4gICAgICAgIDxMYXlvdXQgdGl0bGU9eyBjaGFubmVsLnRpdGxlIH0gPlxyXG5cclxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJoZXJvXCIgc3R5bGU9e3sgYmFja2dyb3VuZEltYWdlOiBgdXJsKCR7Y2hhbm5lbC51cmxzLmxvZ29faW1hZ2Uub3JpZ2luYWx9YCB9fSA+PC9kaXY+XHJcblxyXG4gICAgICAgICAgICB7IG9wZW5Qb2RjYXN0ICYmIFxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1vZGFsXCI+XHJcbiAgICAgICAgICAgICAgey8qIDxQb2RhY2FzdFBsYXllciBjbGlwPXsgb3BlblBvZGNhc3QgfSBvbkNsb3NlPXsgdGhpcy5jbG9zZVBvZGNhc3QgfSAvPiAqL31cclxuICAgICAgICAgICAgPC9kaXY+IH1cclxuXHJcbiAgICAgICAgICAgIDxoMT4geyBjaGFubmVsLnRpdGxlIH0gPC9oMT5cclxuXHJcbiAgICAgICAgICAgIHsgYXVkaW9DbGlwcy5sZW5ndGggPiAwICYmXHJcbiAgICAgICAgICAgICAgICA8U2VyaWVzXHJcbiAgICAgICAgICAgICAgICBhcnIgPSB7IGF1ZGlvQ2xpcHMgfVxyXG4gICAgICAgICAgICAgICAgb25DbGlja1BvZGNhc3QgPSB7IHRoaXMub3BlblBvZGNhc3QgfVxyXG4gICAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgeyBzZXJpZXMubGVuZ3RoID4gMCAmJlxyXG4gICAgICAgICAgICAgICAgPENsaXBzIFxyXG4gICAgICAgICAgICAgICAgYXJyPXsgc2VyaWVzIH1cclxuICAgICAgICAgICAgICAgIG9uQ2xpY2tQb2RjYXN0ID0geyB0aGlzLm9wZW5Qb2RjYXN0IH1cclxuICAgICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIFxyXG5cclxuICAgICAgICAgICAgPHN0eWxlIGpzeD57YFxyXG4gICAgICAgICAgICAgIGhlYWRlcntcclxuICAgICAgICAgICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDogIzg3NTZjYTtcclxuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDE1cHg7XHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDEuNWVtO1xyXG4gICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIC5jaGFubmVscyB7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBncmlkO1xyXG4gICAgICAgICAgICAgICAgZ3JpZC1nYXA6IDE1cHg7XHJcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAxNXB4O1xyXG4gICAgICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maWxsLCBtaW5tYXgoMTYwcHgsIDFmcikpO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAuY2hhbm5lbCB7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDNweDtcclxuICAgICAgICAgICAgICAgIGJveC1zaGFkb3cgMHB4IDJweCA2cHggcmdiYSgwLDAsMCwwLjE1KTtcclxuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDAuNWVtO1xyXG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAuY2hhbm5lbCBpbWcge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIGgxIHtcclxuICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAxNXB4O1xyXG4gICAgICAgICAgICAgICAgY29sb3I6IHdoaXRlc21va2U7XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIGgyIHtcclxuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDVweDtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMC45ZW07XHJcbiAgICAgICAgICAgICAgICBmb250LXdlaWd0aDogNjAwO1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgICAgICAgICAgY29sb3I6IHdoaXRlc21va2U7XHJcbiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIGg0e1xyXG4gICAgICAgICAgICAgICAgY29sb3I6IGJsYWNrO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAuaGVyb3tcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMjUwcHg7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcclxuICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgIC5tb2RhbHtcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgICAgICAgICAgICAgIHRvcDogMDtcclxuICAgICAgICAgICAgICAgIHJpZ2h0OiAwO1xyXG4gICAgICAgICAgICAgICAgYm90dG9tOiAwO1xyXG4gICAgICAgICAgICAgICAgbGVmdDogMDtcclxuICAgICAgICAgICAgICAgIHotaW5kZXg6IDk5OTk7XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBgfTwvc3R5bGU+XHJcblxyXG4gICAgICAgICAgICA8c3R5bGUganN4IGdsb2JhbD57YFxyXG4gICAgICAgICAgICAgIGJvZHl7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgICAgICAgICBmb250LWZhbWlseTogc3lzdGVtLXVpO1xyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzIzNDA1MDtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgYXtcclxuICAgICAgICAgICAgICAgIGNvbG9yOiB3aGl0ZXNtb2tlO1xyXG4gICAgICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICBsaXtcclxuICAgICAgICAgICAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogd2hpdGVzbW9rZTtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGB9PC9zdHlsZT5cclxuICAgICAgICA8L0xheW91dD5cclxuICAgICAgPC9SZWFjdC5GcmFnbWVudD5cclxuICAgIClcclxuICB9XHJcbn0iXX0= */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\Marlon\\\\\\\\Desktop\\\\\\\\Platzi\\\\\\\\JS\\\\\\\\nextJS\\\\\\\\podcast\\\\\\\\pages\\\\\\\\channel.jsx */\"), __jsx(_JSXStyle, {\n      id: \"2358810061\"\n    }, \"body{margin:0;font-family:system-ui;background-color:#234050;}a{color:whitesmoke;-webkit-text-decoration:none;text-decoration:none;}li{list-style:none;color:whitesmoke;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTWFybG9uXFxEZXNrdG9wXFxQbGF0emlcXEpTXFxuZXh0SlNcXHBvZGNhc3RcXHBhZ2VzXFxjaGFubmVsLmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEwSitCLEFBRzBCLEFBS1EsQUFJRCxTQVJNLE9BU0wsQ0FKSSxjQUpJLEVBUzNCLHVCQVJBLFdBSUEiLCJmaWxlIjoiQzpcXFVzZXJzXFxNYXJsb25cXERlc2t0b3BcXFBsYXR6aVxcSlNcXG5leHRKU1xccG9kY2FzdFxccGFnZXNcXGNoYW5uZWwuanN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEVycm9yIGZyb20gJ25leHQvZXJyb3InXHJcblxyXG5pbXBvcnQgTGF5b3V0IGZyb20gJy4uL2NvbXBvbmVudC9MYXlvdXQnXHJcbmltcG9ydCBTZXJpZXMgZnJvbSAnLi4vY29tcG9uZW50L1NlcmllcydcclxuaW1wb3J0IENsaXBzIGZyb20gJy4uL2NvbXBvbmVudC9DbGlwcydcclxuaW1wb3J0IFBvZGFjYXN0UGxheWVyIGZyb20gJy4uL2NvbXBvbmVudC9Qb2RjYXN0UGxheWVyJ1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xyXG4gIGNvbnN0cnVjdG9yKHByb3BzKXtcclxuICAgIHN1cGVyKHByb3BzKVxyXG5cclxuICAgIHRoaXMuc3RhdGUgPSB7IG9wZW5Qb2RjYXN0OiBudWxsIH1cclxuICB9XHJcblxyXG4gIHN0YXRpYyBhc3luYyBnZXRJbml0aWFsUHJvcHMoeyBxdWVyeSwgcmVzIH0pe1xyXG4gICAgbGV0IGlkQ2hhbm5lbCA9IHF1ZXJ5LmlkXHJcblxyXG4gICAgdHJ5e1xyXG4gICAgICBsZXQgW3JlcUNoYW5uZWwsIHJlcUF1ZGlvcywgcmVxU2VyaWVzXSA9IGF3YWl0IFByb21pc2UuYWxsKFtcclxuICAgICAgICBmZXRjaChgaHR0cHM6Ly9hcGkuYXVkaW9ib29tLmNvbS9jaGFubmVscy8ke2lkQ2hhbm5lbH1gKSxcclxuICAgICAgICBmZXRjaChgaHR0cHM6Ly9hcGkuYXVkaW9ib29tLmNvbS9jaGFubmVscy8ke2lkQ2hhbm5lbH0vYXVkaW9fY2xpcHNgKSxcclxuICAgICAgICBmZXRjaChgaHR0cHM6Ly9hcGkuYXVkaW9ib29tLmNvbS9jaGFubmVscy8ke2lkQ2hhbm5lbH0vY2hpbGRfY2hhbm5lbHNgKVxyXG4gICAgICBdKVxyXG5cclxuICAgICAgaWYoIHJlcUNoYW5uZWwuc3RhdHVzID49IDQwMCApIHtcclxuICAgICAgICByZXMuc3RhdHVzQ29kZSA9IHJlcUNoYW5uZWwuc3RhdHVzXHJcbiAgICAgICAgcmV0dXJuIHsgY2hhbm5lbDogbnVsbCwgYXVkaW9DbGlwczogbnVsbCwgc2VyaWVzOiBudWxsLCBzdGF0dXNDb2RlOiByZXFDaGFubmVsLnN0YXR1cyB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGxldCBkYXRhQ2hhbm5lbCA9IGF3YWl0IHJlcUNoYW5uZWwuanNvbigpXHJcbiAgICAgIGxldCBjaGFubmVsID0gZGF0YUNoYW5uZWwuYm9keS5jaGFubmVsXHJcblxyXG4gICAgICBsZXQgZGF0YUF1ZGlvcyA9IGF3YWl0IHJlcUF1ZGlvcy5qc29uKClcclxuICAgICAgbGV0IGF1ZGlvQ2xpcHMgPSBkYXRhQXVkaW9zLmJvZHkuYXVkaW9fY2xpcHNcclxuXHJcbiAgICAgIGxldCBkYXRhU2VyaWVzID0gYXdhaXQgcmVxU2VyaWVzLmpzb24oKVxyXG4gICAgICBsZXQgc2VyaWVzID0gZGF0YVNlcmllcy5ib2R5LmNoYW5uZWxzXHJcblxyXG4gICAgICByZXR1cm4geyBjaGFubmVsLCBhdWRpb0NsaXBzLCBzZXJpZXMsIHN0YXR1c0NvZGU6IDIwMCB9XHJcbiAgICB9IGNhdGNoKGUpIHtcclxuICAgICAgcmV0dXJuIHsgY2hhbm5lbDogbnVsbCwgYXVkaW9DbGlwczogbnVsbCwgc2VyaWVzOiBudWxsLCBzdGF0dXNDb2RlOiA1MDMgfVxyXG4gICAgfVxyXG5cclxuICB9XHJcblxyXG4gIG9wZW5Qb2RjYXN0ID0gKGV2ZW50LCBwb2RjYXN0KSA9PiB7XHJcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpXHJcbiAgICB0aGlzLnNldFN0YXRlKHtcclxuICAgICAgb3BlblBvZGNhc3Q6IHBvZGNhc3RcclxuICAgIH0pXHJcbiAgfVxyXG5cclxuICBjbG9zZVBvZGNhc3QgPSAoZXZlbnQpID0+IHtcclxuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KClcclxuICAgIHRoaXMuc2V0U3RhdGUoe1xyXG4gICAgICBvcGVuUG9kY2FzdDogbnVsbFxyXG4gICAgfSlcclxuICB9XHJcblxyXG4gIHJlbmRlcigpIHtcclxuICBcclxuICAgIGNvbnN0IHsgY2hhbm5lbCwgYXVkaW9DbGlwcywgc2VyaWVzLCBzdGF0dXNDb2RlIH0gPSB0aGlzLnByb3BzXHJcbiAgICBjb25zdCB7IG9wZW5Qb2RjYXN0IH0gPSB0aGlzLnN0YXRlXHJcblxyXG4gICAgaWYoIHN0YXR1c0NvZGUgIT09IDIwMCApe1xyXG4gICAgICByZXR1cm4gPEVycm9yIHN0YXR1c0NvZGU9eyBzdGF0dXNDb2RlIH0gLz5cclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4oXHJcbiAgICAgIDxSZWFjdC5GcmFnbWVudD5cclxuICAgICAgICA8TGF5b3V0IHRpdGxlPXsgY2hhbm5lbC50aXRsZSB9ID5cclxuXHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaGVyb1wiIHN0eWxlPXt7IGJhY2tncm91bmRJbWFnZTogYHVybCgke2NoYW5uZWwudXJscy5sb2dvX2ltYWdlLm9yaWdpbmFsfWAgfX0gPjwvZGl2PlxyXG5cclxuICAgICAgICAgICAgeyBvcGVuUG9kY2FzdCAmJiBcclxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtb2RhbFwiPlxyXG4gICAgICAgICAgICAgIHsvKiA8UG9kYWNhc3RQbGF5ZXIgY2xpcD17IG9wZW5Qb2RjYXN0IH0gb25DbG9zZT17IHRoaXMuY2xvc2VQb2RjYXN0IH0gLz4gKi99XHJcbiAgICAgICAgICAgIDwvZGl2PiB9XHJcblxyXG4gICAgICAgICAgICA8aDE+IHsgY2hhbm5lbC50aXRsZSB9IDwvaDE+XHJcblxyXG4gICAgICAgICAgICB7IGF1ZGlvQ2xpcHMubGVuZ3RoID4gMCAmJlxyXG4gICAgICAgICAgICAgICAgPFNlcmllc1xyXG4gICAgICAgICAgICAgICAgYXJyID0geyBhdWRpb0NsaXBzIH1cclxuICAgICAgICAgICAgICAgIG9uQ2xpY2tQb2RjYXN0ID0geyB0aGlzLm9wZW5Qb2RjYXN0IH1cclxuICAgICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIHsgc2VyaWVzLmxlbmd0aCA+IDAgJiZcclxuICAgICAgICAgICAgICAgIDxDbGlwcyBcclxuICAgICAgICAgICAgICAgIGFycj17IHNlcmllcyB9XHJcbiAgICAgICAgICAgICAgICBvbkNsaWNrUG9kY2FzdCA9IHsgdGhpcy5vcGVuUG9kY2FzdCB9XHJcbiAgICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBcclxuXHJcbiAgICAgICAgICAgIDxzdHlsZSBqc3g+e2BcclxuICAgICAgICAgICAgICBoZWFkZXJ7XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICM4NzU2Y2E7XHJcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAxNXB4O1xyXG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAxLjVlbTtcclxuICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAuY2hhbm5lbHMge1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheTogZ3JpZDtcclxuICAgICAgICAgICAgICAgIGdyaWQtZ2FwOiAxNXB4O1xyXG4gICAgICAgICAgICAgICAgcGFkZGluZzogMTVweDtcclxuICAgICAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KGF1dG8tZmlsbCwgbWlubWF4KDE2MHB4LCAxZnIpKTtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgLmNoYW5uZWwge1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiAzcHg7XHJcbiAgICAgICAgICAgICAgICBib3gtc2hhZG93IDBweCAycHggNnB4IHJnYmEoMCwwLDAsMC4xNSk7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwLjVlbTtcclxuICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgLmNoYW5uZWwgaW1nIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICBoMSB7XHJcbiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICAgICAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgICAgICAgICAgICAgcGFkZGluZzogMTVweDtcclxuICAgICAgICAgICAgICAgIGNvbG9yOiB3aGl0ZXNtb2tlO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICBoMiB7XHJcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiA1cHg7XHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDAuOWVtO1xyXG4gICAgICAgICAgICAgICAgZm9udC13ZWlndGg6IDYwMDtcclxuICAgICAgICAgICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICAgICAgICAgIGNvbG9yOiB3aGl0ZXNtb2tlO1xyXG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICBoNHtcclxuICAgICAgICAgICAgICAgIGNvbG9yOiBibGFjaztcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgLmhlcm97XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDI1MHB4O1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XHJcbiAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAubW9kYWx7XHJcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICAgICAgICAgICAgICB0b3A6IDA7XHJcbiAgICAgICAgICAgICAgICByaWdodDogMDtcclxuICAgICAgICAgICAgICAgIGJvdHRvbTogMDtcclxuICAgICAgICAgICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgICAgICAgICB6LWluZGV4OiA5OTk5O1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH08L3N0eWxlPlxyXG5cclxuICAgICAgICAgICAgPHN0eWxlIGpzeCBnbG9iYWw+e2BcclxuICAgICAgICAgICAgICBib2R5e1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgICAgICAgICAgZm9udC1mYW1pbHk6IHN5c3RlbS11aTtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMyMzQwNTA7XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIGF7XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogd2hpdGVzbW9rZTtcclxuICAgICAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgbGl7XHJcbiAgICAgICAgICAgICAgICBsaXN0LXN0eWxlOiBub25lO1xyXG4gICAgICAgICAgICAgICAgY29sb3I6IHdoaXRlc21va2U7XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBgfTwvc3R5bGU+XHJcbiAgICAgICAgPC9MYXlvdXQ+XHJcbiAgICAgIDwvUmVhY3QuRnJhZ21lbnQ+XHJcbiAgICApXHJcbiAgfVxyXG59Il19 */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\Marlon\\\\\\\\Desktop\\\\\\\\Platzi\\\\\\\\JS\\\\\\\\nextJS\\\\\\\\podcast\\\\\\\\pages\\\\\\\\channel.jsx */\")));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Marlon/Desktop/Platzi/JS/nextJS/podcast/pages/channel.jsx"],"names":["Error","Layout","Series","Clips","PodacastPlayer","React","Component","constructor","props","event","podcast","preventDefault","setState","openPodcast","state","getInitialProps","query","res","idChannel","id","reqChannel","reqAudios","reqSeries","all","fetch","status","statusCode","channel","audioClips","series","dataChannel","json","body","dataAudios","audio_clips","dataSeries","channels","e","render","title","backgroundImage","urls","logo_image","original","length"],"mappings":"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","sourcesContent":["import Error from 'next/error'\r\n\r\nimport Layout from '../component/Layout'\r\nimport Series from '../component/Series'\r\nimport Clips from '../component/Clips'\r\nimport PodacastPlayer from '../component/PodcastPlayer'\r\n\r\nexport default class extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n\r\n    this.state = { openPodcast: null }\r\n  }\r\n\r\n  static async getInitialProps({ query, res }){\r\n    let idChannel = query.id\r\n\r\n    try{\r\n      let [reqChannel, reqAudios, reqSeries] = await Promise.all([\r\n        fetch(`https://api.audioboom.com/channels/${idChannel}`),\r\n        fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`),\r\n        fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`)\r\n      ])\r\n\r\n      if( reqChannel.status >= 400 ) {\r\n        res.statusCode = reqChannel.status\r\n        return { channel: null, audioClips: null, series: null, statusCode: reqChannel.status }\r\n      }\r\n\r\n      let dataChannel = await reqChannel.json()\r\n      let channel = dataChannel.body.channel\r\n\r\n      let dataAudios = await reqAudios.json()\r\n      let audioClips = dataAudios.body.audio_clips\r\n\r\n      let dataSeries = await reqSeries.json()\r\n      let series = dataSeries.body.channels\r\n\r\n      return { channel, audioClips, series, statusCode: 200 }\r\n    } catch(e) {\r\n      return { channel: null, audioClips: null, series: null, statusCode: 503 }\r\n    }\r\n\r\n  }\r\n\r\n  openPodcast = (event, podcast) => {\r\n    event.preventDefault()\r\n    this.setState({\r\n      openPodcast: podcast\r\n    })\r\n  }\r\n\r\n  closePodcast = (event) => {\r\n    event.preventDefault()\r\n    this.setState({\r\n      openPodcast: null\r\n    })\r\n  }\r\n\r\n  render() {\r\n  \r\n    const { channel, audioClips, series, statusCode } = this.props\r\n    const { openPodcast } = this.state\r\n\r\n    if( statusCode !== 200 ){\r\n      return <Error statusCode={ statusCode } />\r\n    }\r\n\r\n    return(\r\n      <React.Fragment>\r\n        <Layout title={ channel.title } >\r\n\r\n            <div className=\"hero\" style={{ backgroundImage: `url(${channel.urls.logo_image.original}` }} ></div>\r\n\r\n            { openPodcast && \r\n            <div className=\"modal\">\r\n              {/* <PodacastPlayer clip={ openPodcast } onClose={ this.closePodcast } /> */}\r\n            </div> }\r\n\r\n            <h1> { channel.title } </h1>\r\n\r\n            { audioClips.length > 0 &&\r\n                <Series\r\n                arr = { audioClips }\r\n                onClickPodcast = { this.openPodcast }\r\n                />\r\n            }\r\n\r\n            { series.length > 0 &&\r\n                <Clips \r\n                arr={ series }\r\n                onClickPodcast = { this.openPodcast }\r\n                />\r\n             }\r\n            \r\n\r\n            <style jsx>{`\r\n              header{\r\n                color: #fff;\r\n                background: #8756ca;\r\n                padding: 15px;\r\n                font-size: 1.5em;\r\n                font-weight: bold;\r\n                text-align: center;\r\n              }\r\n              .channels {\r\n                display: grid;\r\n                grid-gap: 15px;\r\n                padding: 15px;\r\n                grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\r\n              }\r\n              .channel {\r\n                display: block;\r\n                border-radius: 3px;\r\n                box-shadow 0px 2px 6px rgba(0,0,0,0.15);\r\n                margin-bottom: 0.5em;\r\n                text-align: center;\r\n              }\r\n              .channel img {\r\n                width: 100%;\r\n              }\r\n              h1 {\r\n                text-align: center;\r\n                font-weight: 600;\r\n                padding: 15px;\r\n                color: whitesmoke;\r\n              }\r\n              h2 {\r\n                padding: 5px;\r\n                font-size: 0.9em;\r\n                font-weigth: 600;\r\n                margin: 0;\r\n                color: whitesmoke;\r\n                text-align: center;\r\n              }\r\n              h4{\r\n                color: black;\r\n              }\r\n              .hero{\r\n                height: 250px;\r\n                width: 100%;\r\n                background-position: center;\r\n              }\r\n\r\n              .modal{\r\n                position: fixed;\r\n                top: 0;\r\n                right: 0;\r\n                bottom: 0;\r\n                left: 0;\r\n                z-index: 9999;\r\n              }\r\n            `}</style>\r\n\r\n            <style jsx global>{`\r\n              body{\r\n                margin: 0;\r\n                font-family: system-ui;\r\n                background-color: #234050;\r\n              }\r\n              a{\r\n                color: whitesmoke;\r\n                text-decoration: none;\r\n              }\r\n              li{\r\n                list-style: none;\r\n                color: whitesmoke;\r\n              }\r\n            `}</style>\r\n        </Layout>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}