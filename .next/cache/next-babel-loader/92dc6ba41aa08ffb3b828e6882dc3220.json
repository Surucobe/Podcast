{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { withRouter } from 'next/router';\nimport stars from '../public/static/stars.svg';\nexport default class Podacst extends React.Component {\n  render() {\n    const {\n      onClose,\n      clip\n    } = this.props;\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      syle: {\n        backgroundImage: `url(${stars})`\n      },\n      className: \"jsx-2742984871\" + \" \" + \"podcast-container\"\n    }, __jsx(\"a\", {\n      onClick: onClose,\n      className: \"jsx-2742984871\" + \" \" + \"close\"\n    }, \" Back \"), __jsx(\"img\", {\n      src: clip.urls.image || clip.urls.wave_img,\n      alt: clip.title,\n      className: \"jsx-2742984871\" + \" \" + \"hero\"\n    }), __jsx(\"audio\", {\n      controls: true,\n      autoPlay: true,\n      className: \"jsx-2742984871\"\n    }, __jsx(\"source\", {\n      src: clip.urls.high_mp3,\n      type: \"audio/mpeg\",\n      className: \"jsx-2742984871\"\n    })), __jsx(\"p\", {\n      className: \"jsx-2742984871\"\n    }, `comments: ${clip.counts.comments} likes: ${clip.counts.likes} plays: ${clip.counts.plays}`)), __jsx(_JSXStyle, {\n      id: \"2742984871\"\n    }, \".hero.jsx-2742984871{background-color:black;width:250px;height:250px;}.podcast-container.jsx-2742984871{height:100%;width:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;position:relative;background-color:#000;}.close.jsx-2742984871{justify-self:left;position:absolute;left:15px;top:15px;}audio.jsx-2742984871{outline:0;margin:20px 0;}p.jsx-2742984871{color:whitesmoke;}a.jsx-2742984871{cursor:pointer;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTWFybG9uXFxEb3dubG9hZHNcXENvZGluZ1xcanNfcHJvamVjdHNcXHBvZGNhc3RcXGNvbXBvbmVudFxcUG9kY2FzdFBsYXllci5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBdUJzQixBQUdzQyxBQUtYLEFBVU0sQUFNUixBQUlPLEFBR0YsVUFORCxFQWhCSCxHQXVCYixFQUhBLENBVm9CLEtBZk4sQUFNQyxDQWdCZixXQXJCZSxDQWVILFVBQ0QsRUFmWCxPQWdCQSwwQ0FYd0IsOEVBQ0gsNkZBQ0ksbUdBQ0wsa0JBRXJCLHNCQUFDIiwiZmlsZSI6IkM6XFxVc2Vyc1xcTWFybG9uXFxEb3dubG9hZHNcXENvZGluZ1xcanNfcHJvamVjdHNcXHBvZGNhc3RcXGNvbXBvbmVudFxcUG9kY2FzdFBsYXllci5qc3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB3aXRoUm91dGVyIH0gZnJvbSAnbmV4dC9yb3V0ZXInXHJcblxyXG5pbXBvcnQgc3RhcnMgZnJvbSAnLi4vcHVibGljL3N0YXRpYy9zdGFycy5zdmcnXHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb2RhY3N0IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50e1xyXG4gIHJlbmRlcigpIHtcclxuICAgIGNvbnN0IHsgb25DbG9zZSwgY2xpcCB9ID0gdGhpcy5wcm9wc1xyXG5cclxuICAgIHJldHVybihcclxuICAgICAgPD5cclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInBvZGNhc3QtY29udGFpbmVyXCIgc3lsZT17eyBiYWNrZ3JvdW5kSW1hZ2U6IGB1cmwoJHtzdGFyc30pYCB9fT5cclxuICAgICAgICAgIDxhIG9uQ2xpY2s9eyBvbkNsb3NlIH0gY2xhc3NOYW1lPVwiY2xvc2VcIiA+IEJhY2sgPC9hPlxyXG5cclxuICAgICAgICAgICAgPGltZyBzcmM9eyBjbGlwLnVybHMuaW1hZ2UgfHwgY2xpcC51cmxzLndhdmVfaW1nIH0gXHJcbiAgICAgICAgICAgIGFsdD17IGNsaXAudGl0bGUgfSBjbGFzc05hbWU9XCJoZXJvXCIgLz5cclxuICAgICAgICAgICAgPGF1ZGlvIGNvbnRyb2xzIGF1dG9QbGF5PlxyXG4gICAgICAgICAgICAgIDxzb3VyY2Ugc3JjPXsgY2xpcC51cmxzLmhpZ2hfbXAzIH0gdHlwZT1cImF1ZGlvL21wZWdcIiAvPlxyXG4gICAgICAgICAgICA8L2F1ZGlvPlxyXG4gICAgICAgICAgICA8cD5cclxuICAgICAgICAgICAgICB7IGBjb21tZW50czogJHtjbGlwLmNvdW50cy5jb21tZW50c30gbGlrZXM6ICR7Y2xpcC5jb3VudHMubGlrZXN9IHBsYXlzOiAke2NsaXAuY291bnRzLnBsYXlzfWAgfVxyXG4gICAgICAgICAgICA8L3A+XHJcbiAgICAgICAgPC9kaXY+XHJcblxyXG4gICAgICAgICAgPHN0eWxlIGpzeD57YFxyXG4gICAgICAgICAgLmhlcm97XHJcbiAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XHJcbiAgICAgICAgICAgICAgd2lkdGg6IDI1MHB4O1xyXG4gICAgICAgICAgICAgIGhlaWdodDogMjUwcHg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLnBvZGNhc3QtY29udGFpbmVye1xyXG4gICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzAwMFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC5jbG9zZXtcclxuICAgICAgICAgICAgICBqdXN0aWZ5LXNlbGY6IGxlZnQ7XHJcbiAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICAgIGxlZnQ6IDE1cHg7XHJcbiAgICAgICAgICAgICAgdG9wOiAxNXB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGF1ZGlve1xyXG4gICAgICAgICAgICAgIG91dGxpbmU6IDA7XHJcbiAgICAgICAgICAgICAgbWFyZ2luOiAyMHB4IDA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcHtcclxuICAgICAgICAgICAgICBjb2xvcjogd2hpdGVzbW9rZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBhe1xyXG4gICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgYH08L3N0eWxlPlxyXG4gICAgICA8Lz5cclxuICAgIClcclxuICB9XHJcbn1cclxuIl19 */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\Marlon\\\\\\\\Downloads\\\\\\\\Coding\\\\\\\\js_projects\\\\\\\\podcast\\\\\\\\component\\\\\\\\PodcastPlayer.jsx */\"));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Marlon/Downloads/Coding/js_projects/podcast/component/PodcastPlayer.jsx"],"names":["withRouter","stars","Podacst","React","Component","render","onClose","clip","props","backgroundImage","urls","image","wave_img","title","high_mp3","counts","comments","likes","plays"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,aAA3B;AAEA,OAAOC,KAAP,MAAkB,4BAAlB;AAEA,eAAe,MAAMC,OAAN,SAAsBC,KAAK,CAACC,SAA5B,CAAqC;AAClDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAAoB,KAAKC,KAA/B;AAEA,WACE,4BACE;AAAmC,MAAA,IAAI,EAAE;AAAEC,QAAAA,eAAe,EAAG,OAAMR,KAAM;AAAhC,OAAzC;AAAA,0CAAe;AAAf,OACE;AAAG,MAAA,OAAO,EAAGK,OAAb;AAAA,0CAAiC;AAAjC,gBADF,EAGI;AAAK,MAAA,GAAG,EAAGC,IAAI,CAACG,IAAL,CAAUC,KAAV,IAAmBJ,IAAI,CAACG,IAAL,CAAUE,QAAxC;AACA,MAAA,GAAG,EAAGL,IAAI,CAACM,KADX;AAAA,0CAC6B;AAD7B,MAHJ,EAKI;AAAO,MAAA,QAAQ,MAAf;AAAgB,MAAA,QAAQ,MAAxB;AAAA;AAAA,OACE;AAAQ,MAAA,GAAG,EAAGN,IAAI,CAACG,IAAL,CAAUI,QAAxB;AAAmC,MAAA,IAAI,EAAC,YAAxC;AAAA;AAAA,MADF,CALJ,EAQI;AAAA;AAAA,OACK,aAAYP,IAAI,CAACQ,MAAL,CAAYC,QAAS,WAAUT,IAAI,CAACQ,MAAL,CAAYE,KAAM,WAAUV,IAAI,CAACQ,MAAL,CAAYG,KAAM,EAD9F,CARJ,CADF;AAAA;AAAA,uzHADF;AAkDD;;AAtDiD","sourcesContent":["import { withRouter } from 'next/router'\r\n\r\nimport stars from '../public/static/stars.svg'\r\n\r\nexport default class Podacst extends React.Component{\r\n  render() {\r\n    const { onClose, clip } = this.props\r\n\r\n    return(\r\n      <>\r\n        <div className=\"podcast-container\" syle={{ backgroundImage: `url(${stars})` }}>\r\n          <a onClick={ onClose } className=\"close\" > Back </a>\r\n\r\n            <img src={ clip.urls.image || clip.urls.wave_img } \r\n            alt={ clip.title } className=\"hero\" />\r\n            <audio controls autoPlay>\r\n              <source src={ clip.urls.high_mp3 } type=\"audio/mpeg\" />\r\n            </audio>\r\n            <p>\r\n              { `comments: ${clip.counts.comments} likes: ${clip.counts.likes} plays: ${clip.counts.plays}` }\r\n            </p>\r\n        </div>\r\n\r\n          <style jsx>{`\r\n          .hero{\r\n              background-color: black;\r\n              width: 250px;\r\n              height: 250px;\r\n            }\r\n            .podcast-container{\r\n              height: 100%;\r\n              width: 100%;\r\n              display: flex;\r\n              flex-direction: column;\r\n              align-items: center;\r\n              justify-content: center;\r\n              position: relative;\r\n              background-color: #000\r\n            }\r\n            .close{\r\n              justify-self: left;\r\n              position: absolute;\r\n              left: 15px;\r\n              top: 15px;\r\n            }\r\n            audio{\r\n              outline: 0;\r\n              margin: 20px 0;\r\n            }\r\n            p{\r\n              color: whitesmoke;\r\n            }\r\n            a{\r\n              cursor: pointer;\r\n            }\r\n          `}</style>\r\n      </>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}