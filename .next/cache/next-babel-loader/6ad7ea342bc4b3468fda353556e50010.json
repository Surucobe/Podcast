{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Error from 'next/error';\nimport Layout from '../component/Layout';\nimport Series from '../component/Series';\nimport Clips from '../component/Clips';\nimport PodacastPlayer from '../component/PodcastPlayer';\n\nvar _default =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(_default, _React$Component);\n\n  function _default(props) {\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(_default).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"openPodcast\", function (event, podcast) {\n      event.preventDefault();\n\n      _this.setState({\n        openPodcast: podcast\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"closePodcast\", function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        openPodcast: null\n      });\n    });\n\n    _this.state = {\n      openPodcast: null\n    };\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          channel = _this$props.channel,\n          audioClips = _this$props.audioClips,\n          series = _this$props.series,\n          statusCode = _this$props.statusCode;\n      var openPodcast = this.state.openPodcast;\n\n      if (statusCode !== 200) {\n        return __jsx(Error, {\n          statusCode: statusCode\n        });\n      }\n\n      return __jsx(React.Fragment, null, __jsx(Layout, {\n        title: channel.title\n      }, __jsx(\"div\", {\n        style: {\n          backgroundImage: \"url(\".concat(channel.urls.logo_image.original)\n        },\n        className: \"jsx-1980356252\" + \" \" + \"hero\"\n      }), openPodcast && __jsx(\"div\", {\n        className: \"jsx-1980356252\" + \" \" + \"modal\"\n      }, __jsx(PodacastPlayer, {\n        clip: openPodcast,\n        onClose: this.closePodcast\n      })), __jsx(\"h1\", {\n        className: \"jsx-1980356252\"\n      }, \" \", channel.title, \" \"), audioClips.length > 0 && __jsx(Series, {\n        arr: audioClips,\n        onClickPodcast: this.openPodcast\n      }), series.length > 0 && __jsx(Clips, {\n        arr: series,\n        onClickPodcast: this.openPodcast\n      }), __jsx(_JSXStyle, {\n        id: \"1889348503\"\n      }, [\"header.jsx-1980356252{color:#fff;background:#8756ca;padding:15px;font-size:1.5em;font-weight:bold;text-align:center;}\", \".channels.jsx-1980356252{display:grid;grid-gap:15px;padding:15px;grid-template-columns:repeat(auto-fill,minmax(160px,1fr));}\", \".channel.jsx-1980356252{display:block;border-radius:3px;box-shadow:0px 2px 6px rgba(0,0,0,0.15);margin-bottom:0.5em;text-align:center;}\", \".channel.jsx-1980356252 img.jsx-1980356252{width:100%;}\", \"h1.jsx-1980356252{text-align:center;font-weight:600;padding:15px;color:whitesmoke;}\", \"h2.jsx-1980356252{padding:5px;font-size:0.9em;font-weigth:600;margin:0;color:whitesmoke;text-align:center;}\", \"h4.jsx-1980356252{color:black;}\", \".hero.jsx-1980356252{height:250px;width:100%;background-position:center;}\", \".modal.jsx-1980356252{position:fixed;top:0;right:0;bottom:0;left:0;background:#8756ca;z-index:9999;}\"]), __jsx(_JSXStyle, {\n        id: \"1566101122\"\n      }, [\"a{color:whitesmoke;-webkit-text-decoration:none;text-decoration:none;}\", \"li{list-style:none;color:whitesmoke;}\"])));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var query, res, idChannel, _ref2, _ref3, reqChannel, reqAudios, reqSeries, dataChannel, channel, dataAudios, audioClips, dataSeries, series;\n\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              query = _ref.query, res = _ref.res;\n              idChannel = query.id;\n              _context.prev = 2;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(_Promise.all([fetch(\"https://api.audioboom.com/channels/\".concat(idChannel)), fetch(\"https://api.audioboom.com/channels/\".concat(idChannel, \"/audio_clips\")), fetch(\"https://api.audioboom.com/channels/\".concat(idChannel, \"/child_channels\"))]));\n\n            case 5:\n              _ref2 = _context.sent;\n              _ref3 = _slicedToArray(_ref2, 3);\n              reqChannel = _ref3[0];\n              reqAudios = _ref3[1];\n              reqSeries = _ref3[2];\n\n              if (!(reqChannel.status >= 400)) {\n                _context.next = 13;\n                break;\n              }\n\n              res.statusCode = reqChannel.status;\n              return _context.abrupt(\"return\", {\n                channel: null,\n                audioClips: null,\n                series: null,\n                statusCode: reqChannel.status\n              });\n\n            case 13:\n              _context.next = 15;\n              return _regeneratorRuntime.awrap(reqChannel.json());\n\n            case 15:\n              dataChannel = _context.sent;\n              channel = dataChannel.body.channel;\n              _context.next = 19;\n              return _regeneratorRuntime.awrap(reqAudios.json());\n\n            case 19:\n              dataAudios = _context.sent;\n              audioClips = dataAudios.body.audio_clips;\n              _context.next = 23;\n              return _regeneratorRuntime.awrap(reqSeries.json());\n\n            case 23:\n              dataSeries = _context.sent;\n              series = dataSeries.body.channels;\n              return _context.abrupt(\"return\", {\n                channel: channel,\n                audioClips: audioClips,\n                series: series,\n                statusCode: 200\n              });\n\n            case 28:\n              _context.prev = 28;\n              _context.t0 = _context[\"catch\"](2);\n              return _context.abrupt(\"return\", {\n                channel: null,\n                audioClips: null,\n                series: null,\n                statusCode: 503\n              });\n\n            case 31:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[2, 28]]);\n    }\n  }]);\n\n  return _default;\n}(React.Component);\n\nexport { _default as default };","map":null,"metadata":{},"sourceType":"module"}