{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { withRouter } from 'next/router';\nexport default class Podacst extends React.Component {\n  render() {\n    const {\n      altTitle,\n      audioClip,\n      clipImg,\n      box\n    } = this.props;\n    const {\n      onClose\n    } = this.props;\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"jsx-1280079310\" + \" \" + \"podcast-container\"\n    }, __jsx(\"a\", {\n      onClick: onClose,\n      className: \"jsx-1280079310\" + \" \" + \"close\"\n    }, \" Back \"), __jsx(\"img\", {\n      src: clipImg,\n      alt: altTitle,\n      className: \"jsx-1280079310\" + \" \" + \"hero\"\n    }), __jsx(\"audio\", {\n      controls: true,\n      autoPlay: true,\n      className: \"jsx-1280079310\"\n    }, __jsx(\"source\", {\n      src: audioClip,\n      type: \"audio/mpeg\",\n      className: \"jsx-1280079310\"\n    })), __jsx(\"p\", {\n      className: \"jsx-1280079310\"\n    }, `comments:  likes:  plays: `)), __jsx(_JSXStyle, {\n      id: \"1280079310\"\n    }, \".hero.jsx-1280079310{background-color:black;width:250px;height:250px;}.podcast-container.jsx-1280079310{height:100%;width:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;position:relative;}.close.jsx-1280079310{justify-self:left;position:absolute;left:15px;top:10px;}audio.jsx-1280079310{outline:0;}p.jsx-1280079310{color:whitesmoke;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTWFybG9uXFxEZXNrdG9wXFxQbGF0emlcXEpTXFxuZXh0SlNcXHBvZGNhc3RcXGNvbXBvbmVudFxcUG9kY2FzdFBsYXllci5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBc0JzQixBQUdzQyxBQUtYLEFBU00sQUFNUixBQUdPLFVBRm5CLEVBZmEsS0FrQmIsQ0FUb0IsS0FkTixBQU1DLFlBTEEsQ0FjSCxVQUNELEVBZFgsT0FlQSwwQ0FWd0IsOEVBQ0gsNkZBQ1csbUhBQ1osa0JBQ3BCIiwiZmlsZSI6IkM6XFxVc2Vyc1xcTWFybG9uXFxEZXNrdG9wXFxQbGF0emlcXEpTXFxuZXh0SlNcXHBvZGNhc3RcXGNvbXBvbmVudFxcUG9kY2FzdFBsYXllci5qc3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB3aXRoUm91dGVyIH0gZnJvbSAnbmV4dC9yb3V0ZXInXHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb2RhY3N0IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50e1xyXG4gIHJlbmRlcigpIHtcclxuICAgIGNvbnN0IHsgYWx0VGl0bGUsIGF1ZGlvQ2xpcCwgY2xpcEltZywgYm94IH0gPSB0aGlzLnByb3BzXHJcbiAgICBjb25zdCB7IG9uQ2xvc2UgfSA9IHRoaXMucHJvcHNcclxuXHJcbiAgICByZXR1cm4oXHJcbiAgICAgIDxSZWFjdC5GcmFnbWVudD5cclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInBvZGNhc3QtY29udGFpbmVyXCI+XHJcbiAgICAgICAgICA8YSBvbkNsaWNrPXsgb25DbG9zZSB9IGNsYXNzTmFtZT1cImNsb3NlXCIgPiBCYWNrIDwvYT5cclxuXHJcbiAgICAgICAgICAgIDxpbWcgc3JjPXsgY2xpcEltZyB9IGFsdD17IGFsdFRpdGxlIH0gY2xhc3NOYW1lPVwiaGVyb1wiIC8+XHJcbiAgICAgICAgICAgIDxhdWRpbyBjb250cm9scyBhdXRvUGxheT5cclxuICAgICAgICAgICAgICA8c291cmNlIHNyYz17IGF1ZGlvQ2xpcCB9IHR5cGU9XCJhdWRpby9tcGVnXCIgLz5cclxuICAgICAgICAgICAgPC9hdWRpbz5cclxuICAgICAgICAgICAgPHA+XHJcbiAgICAgICAgICAgICAgey8qIHsgYGNvbW1lbnRzOiAke2JveC5jb21tZW50c30gbGlrZXM6ICR7Ym94Lmxpa2VzfSBwbGF5czogJHtib3gucGxheXN9YCB9ICovfVxyXG4gICAgICAgICAgICAgIHsgYGNvbW1lbnRzOiAgbGlrZXM6ICBwbGF5czogYCB9XHJcbiAgICAgICAgICAgIDwvcD5cclxuICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAgICAgICA8c3R5bGUganN4PntgXHJcbiAgICAgICAgICAuaGVyb3tcclxuICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcclxuICAgICAgICAgICAgICB3aWR0aDogMjUwcHg7XHJcbiAgICAgICAgICAgICAgaGVpZ2h0OiAyNTBweDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAucG9kY2FzdC1jb250YWluZXJ7XHJcbiAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLmNsb3Nle1xyXG4gICAgICAgICAgICAgIGp1c3RpZnktc2VsZjogbGVmdDtcclxuICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgICAgbGVmdDogMTVweDtcclxuICAgICAgICAgICAgICB0b3A6IDEwcHg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYXVkaW97XHJcbiAgICAgICAgICAgICAgb3V0bGluZTogMDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBwe1xyXG4gICAgICAgICAgICAgIGNvbG9yOiB3aGl0ZXNtb2tlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICBgfTwvc3R5bGU+XHJcbiAgICAgIDwvUmVhY3QuRnJhZ21lbnQ+XHJcbiAgICApXHJcbiAgfVxyXG59Il19 */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\Marlon\\\\\\\\Desktop\\\\\\\\Platzi\\\\\\\\JS\\\\\\\\nextJS\\\\\\\\podcast\\\\\\\\component\\\\\\\\PodcastPlayer.jsx */\"));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Marlon/Desktop/Platzi/JS/nextJS/podcast/component/PodcastPlayer.jsx"],"names":["withRouter","Podacst","React","Component","render","altTitle","audioClip","clipImg","box","props","onClose"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,aAA3B;AAEA,eAAe,MAAMC,OAAN,SAAsBC,KAAK,CAACC,SAA5B,CAAqC;AAClDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,SAAZ;AAAuBC,MAAAA,OAAvB;AAAgCC,MAAAA;AAAhC,QAAwC,KAAKC,KAAnD;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AAEA,WACE,MAAC,KAAD,CAAO,QAAP,QACE;AAAA,0CAAe;AAAf,OACE;AAAG,MAAA,OAAO,EAAGC,OAAb;AAAA,0CAAiC;AAAjC,gBADF,EAGI;AAAK,MAAA,GAAG,EAAGH,OAAX;AAAqB,MAAA,GAAG,EAAGF,QAA3B;AAAA,0CAAgD;AAAhD,MAHJ,EAII;AAAO,MAAA,QAAQ,MAAf;AAAgB,MAAA,QAAQ,MAAxB;AAAA;AAAA,OACE;AAAQ,MAAA,GAAG,EAAGC,SAAd;AAA0B,MAAA,IAAI,EAAC,YAA/B;AAAA;AAAA,MADF,CAJJ,EAOI;AAAA;AAAA,OAEK,4BAFL,CAPJ,CADF;AAAA;AAAA,i/GADF;AA6CD;;AAlDiD","sourcesContent":["import { withRouter } from 'next/router'\r\n\r\nexport default class Podacst extends React.Component{\r\n  render() {\r\n    const { altTitle, audioClip, clipImg, box } = this.props\r\n    const { onClose } = this.props\r\n\r\n    return(\r\n      <React.Fragment>\r\n        <div className=\"podcast-container\">\r\n          <a onClick={ onClose } className=\"close\" > Back </a>\r\n\r\n            <img src={ clipImg } alt={ altTitle } className=\"hero\" />\r\n            <audio controls autoPlay>\r\n              <source src={ audioClip } type=\"audio/mpeg\" />\r\n            </audio>\r\n            <p>\r\n              {/* { `comments: ${box.comments} likes: ${box.likes} plays: ${box.plays}` } */}\r\n              { `comments:  likes:  plays: ` }\r\n            </p>\r\n        </div>\r\n\r\n          <style jsx>{`\r\n          .hero{\r\n              background-color: black;\r\n              width: 250px;\r\n              height: 250px;\r\n            }\r\n            .podcast-container{\r\n              height: 100%;\r\n              width: 100%;\r\n              display: flex;\r\n              flex-direction: column;\r\n              align-items: center;\r\n              justify-content: space-between;\r\n              position: relative;\r\n            }\r\n            .close{\r\n              justify-self: left;\r\n              position: absolute;\r\n              left: 15px;\r\n              top: 10px;\r\n            }\r\n            audio{\r\n              outline: 0;\r\n            }\r\n            p{\r\n              color: whitesmoke;\r\n            }\r\n          `}</style>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}